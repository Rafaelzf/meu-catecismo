generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Sections {
  id         Int      @id @default(autoincrement())
  title      String   @unique
  slug       String   @unique
  message    String
  icon       String?
  topics     Topic[]
  active     Boolean  @default(true)
  createDate DateTime @default(now())
  updateDate DateTime @updatedAt
}

model Topic {
  id              Int             @id @default(autoincrement())
  parentSlug      String
  title           String          @unique
  section         Sections?       @relation(fields: [parentSectionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentSectionId Int?
  image           Bytes?
  active          Boolean         @default(true)
  questionsAsks   QuestionsAsks[]
  createDate      DateTime        @default(now())
  updateDate      DateTime        @updatedAt
}

model QuestionsAsks {
  id         Int      @id @default(autoincrement())
  question   String   @unique
  asks       Ask[]
  topic      Topic?   @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  topicId    Int?
  createDate DateTime @default(now())
  updateDate DateTime @updatedAt
}

model Ask {
  id            Int            @id @default(autoincrement())
  ask           String         @unique
  QuestionsAsks QuestionsAsks? @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  questionId    Int?
  createDate    DateTime       @default(now())
  updateDate    DateTime       @updatedAt
}
